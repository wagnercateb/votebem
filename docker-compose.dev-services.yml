services:
  # PostgreSQL Database
  db:
    image: postgres:15-alpine
    container_name: votebem_db_dev
    environment:
      POSTGRES_DB: votebem_dev
      POSTGRES_USER: votebem_user
      POSTGRES_PASSWORD: votebem_dev_password
    volumes:
      - postgres_dev_data:/var/lib/postgresql/data
      - ./scripts/init_db.sql:/docker-entrypoint-initdb.d/init_db.sql:ro
    ports:
      - "5432:5432"
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U votebem_user -d votebem_dev"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - votebem_dev_network

  # Redis Cache
  redis:
    image: redis:7-alpine
    container_name: votebem_redis_dev
    volumes:
      - redis_dev_data:/data
    ports:
      - "6379:6379"
    restart: unless-stopped
    command: redis-server --appendonly yes --requirepass ""
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 30s
      timeout: 10s
      retries: 3
    networks:
      - votebem_dev_network

  # Nginx Reverse Proxy (Optional - for testing production-like setup)
  nginx:
    image: nginx:alpine
    container_name: votebem_nginx_dev
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/dev.conf:/etc/nginx/conf.d/default.conf:ro
      - ./static:/var/www/static:ro
      - ./media:/var/www/media:ro
    depends_on:
      - db
      - redis
    restart: unless-stopped
    networks:
      - votebem_dev_network

  # pgAdmin (Optional - Database Management UI)
  pgadmin:
    image: dpage/pgadmin4:latest
    container_name: votebem_pgadmin_dev
    environment:
      PGADMIN_DEFAULT_EMAIL: admin@votebem.dev
      PGADMIN_DEFAULT_PASSWORD: admin123
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - pgadmin_dev_data:/var/lib/pgadmin
    ports:
      - "8080:80"
    depends_on:
      - db
    restart: unless-stopped
    networks:
      - votebem_dev_network

  # Redis Commander (Optional - Redis Management UI)
  redis-commander:
    image: rediscommander/redis-commander:latest
    container_name: votebem_redis_commander_dev
    environment:
      REDIS_HOSTS: local:redis:6379
    ports:
      - "8081:8081"
    depends_on:
      - redis
    restart: unless-stopped
    networks:
      - votebem_dev_network

volumes:
  postgres_dev_data:
    driver: local
  redis_dev_data:
    driver: local
  pgadmin_dev_data:
    driver: local

networks:
  votebem_dev_network:
    driver: bridge